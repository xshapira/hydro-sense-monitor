name: ðŸš€ HydroSense Monitor CI/CD
# Only trigger, when the build workflow succeeded
on:
  push:
    branches: ["main"]
permissions:
  contents: read
env:
  PROJECT_NAME: "HydroSense Monitor"
  BACKEND_CORS_ORIGINS: "${{ secrets.BACKEND_CORS_ORIGINS }}"
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true
jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: Install backend dependencies
        working-directory: ./backend
        run: uv sync
      - name: Run backend tests
        working-directory: ./backend
        run: PYTHONPATH=.. uv run pytest
      - name: Run backend linting
        working-directory: ./backend
        run: uv run ruff check .
  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install
      - name: Generate React Router types
        working-directory: ./frontend
        run: pnpm exec react-router typegen
      - name: Run frontend tests
        working-directory: ./frontend
        run: pnpm test
      - name: Run frontend linting and formatting
        working-directory: ./frontend
        run: pnpm run format:lint
      - name: Build frontend
        working-directory: ./frontend
        run: pnpm run build
